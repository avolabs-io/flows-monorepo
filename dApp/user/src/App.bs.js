// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Client from "@apollo/client";
import * as Dapp$FlowsUserApp from "./Dapp.bs.js";
import * as Login$FlowsUserApp from "./Login/Login.bs.js";
import * as Apollo$FlowsUserApp from "./Apollo.bs.js";
import * as Router$FlowsUserApp from "./Router.bs.js";
import * as AuthProvider$FlowsUserApp from "./lib/Auth/AuthProvider.bs.js";
import * as RootProvider$FlowsUserApp from "./lib/Old/RootProvider.bs.js";

function App$OnlyLoggedIn(Props) {
  var children = Props.children;
  var optUsersAccount = RootProvider$FlowsUserApp.useCurrentUser(undefined);
  if (optUsersAccount !== undefined) {
    return children;
  } else {
    return React.createElement(Login$FlowsUserApp.make, {
                redirectOnLogin: false
              });
  }
}

var OnlyLoggedIn = {
  make: App$OnlyLoggedIn
};

function App$Main(Props) {
  return React.createElement(App$OnlyLoggedIn, {
              children: null
            }, React.createElement("h1", undefined, "Main component"), React.createElement(Dapp$FlowsUserApp.make, {}));
}

var Main = {
  make: App$Main
};

function App$NotFound(Props) {
  return React.createElement("h1", undefined, "Not Found - 404");
}

var NotFound = {
  make: App$NotFound
};

function App$Router(Props) {
  var route = Router$FlowsUserApp.useRouter(undefined);
  if (route !== undefined) {
    if (route) {
      return React.createElement(Login$FlowsUserApp.make, {});
    } else {
      return React.createElement(App$Main, {});
    }
  } else {
    return React.createElement(App$NotFound, {});
  }
}

var Router = {
  make: App$Router
};

function App$GraphQl(Props) {
  var children = Props.children;
  var user = RootProvider$FlowsUserApp.useCurrentUser(undefined);
  var client = React.useMemo((function () {
          return Apollo$FlowsUserApp.makeClient(user);
        }), [user]);
  return React.createElement(Client.ApolloProvider, {
              client: client,
              children: children
            });
}

var GraphQl = {
  make: App$GraphQl
};

function App(Props) {
  return React.createElement(RootProvider$FlowsUserApp.make, {
              children: React.createElement(App$GraphQl, {
                    children: React.createElement(AuthProvider$FlowsUserApp.make, {
                          children: React.createElement(App$Router, {})
                        })
                  })
            });
}

var make = App;

export {
  OnlyLoggedIn ,
  Main ,
  NotFound ,
  Router ,
  GraphQl ,
  make ,
  
}
/* react Not a pure module */
