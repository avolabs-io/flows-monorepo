// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Ethers from "ethers";
import * as Belt_Float from "bs-platform/lib/es6/belt_Float.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Caml_format from "bs-platform/lib/es6/caml_format.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Ethers$FlowsUserApp from "../Ethers/Ethers.bs.js";
import * as Helper$FlowsUserApp from "./Helper.bs.js";

function toFixedWithPrecisionNoTrailingZeros(number, digits) {
  return String(Caml_format.caml_float_of_string(number.toFixed(digits)));
}

function getFloat(value, unit) {
  if (unit.TAG === /* Eth */0) {
    return Number(Ethers.utils.formatUnits(value, unit._0));
  } else {
    return Number(Ethers$FlowsUserApp.Utils.formatEther(value)) * unit._0;
  }
}

function get(value, unit) {
  if (unit.TAG === /* Eth */0) {
    return Ethers.utils.formatUnits(value, unit._0);
  } else {
    return toFixedWithPrecisionNoTrailingZeros(Number(Ethers$FlowsUserApp.Utils.formatEther(value)) * unit._0, unit._1);
  }
}

function make(wei) {
  if (Helper$FlowsUserApp.isPositiveStringInteger(wei)) {
    return Caml_option.some(Ethers.BigNumber.from(wei));
  }
  
}

function makeWithDefault(tokenId, $$default) {
  var wei = make(tokenId);
  if (wei !== undefined) {
    return Caml_option.valFromOption(wei);
  } else {
    return Ethers.BigNumber.from($$default);
  }
}

function makeFromInt(prim) {
  return Ethers.BigNumber.from(prim);
}

function makeFromEthStr(eth) {
  return Ethers$FlowsUserApp.Utils.parseEther(eth);
}

function toFixedWithPrecisionNoTrailingZeros$1(digitsOpt, eth) {
  var digits = digitsOpt !== undefined ? digitsOpt : 9;
  return toFixedWithPrecisionNoTrailingZeros(Belt_Option.getWithDefault(Belt_Float.fromString(Ethers$FlowsUserApp.Utils.formatEther(eth)), 0), digits);
}

export {
  getFloat ,
  get ,
  make ,
  makeWithDefault ,
  makeFromInt ,
  makeFromEthStr ,
  toFixedWithPrecisionNoTrailingZeros$1 as toFixedWithPrecisionNoTrailingZeros,
  
}
/* ethers Not a pure module */
