// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Ethers$FlowsUserApp from "../Ethers/Ethers.bs.js";

var currentLoginKey = "CurrentUserLoggedIn";

function get(item) {
  var __x = localStorage;
  return Caml_option.null_to_opt(__x.getItem(item));
}

function set(key, item) {
  localStorage.setItem(key, item);
  
}

function setSignInData(ethAddress, ethSignature) {
  return set(Ethers$FlowsUserApp.Utils.ethAdrToLowerStr(ethAddress), ethSignature);
}

function setCurrentUser(ethAddress) {
  return set(currentLoginKey, Ethers$FlowsUserApp.Utils.ethAdrToLowerStr(ethAddress));
}

var getUserSignatureOpt = get;

function getCurrentLoggedInUserOpt(param) {
  return Belt_Option.flatMap(get(currentLoginKey), Ethers$FlowsUserApp.Utils.getAddress);
}

var LocalStorage = {
  currentLoginKey: currentLoginKey,
  get: get,
  set: set,
  setSignInData: setSignInData,
  setCurrentUser: setCurrentUser,
  getUserSignatureOpt: getUserSignatureOpt,
  getCurrentLoggedInUserOpt: getCurrentLoggedInUserOpt
};

function make(user) {
  return Belt_Option.flatMap(get(Ethers$FlowsUserApp.Utils.ethAdrToLowerStr(user)), (function (ethSignature) {
                return {
                        "eth-address": Ethers$FlowsUserApp.Utils.ethAdrToStr(user),
                        "eth-signature": ethSignature
                      };
              }));
}

function makeFromOpt(optUser) {
  return Belt_Option.flatMap(optUser, make);
}

var $$Headers = {
  make: make,
  makeFromOpt: makeFromOpt
};

export {
  LocalStorage ,
  $$Headers ,
  
}
/* Ethers-FlowsUserApp Not a pure module */
