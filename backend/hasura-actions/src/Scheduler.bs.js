// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Decco = require("decco/src/Decco.bs.js");
var Fetch = require("bs-fetch/src/Fetch.bs.js");
var BsCron = require("bs-cron/src/BsCron.bs.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

function makePaymentRequest_encode(v) {
  return Js_dict.fromArray([
              [
                "amount",
                Decco.stringToJson(v.amount)
              ],
              [
                "identifier",
                Decco.optionToJson(Decco.stringToJson, v.identifier)
              ]
            ]);
}

function makePayment(recipientAddress, amount) {
  var requestString = "http://raiden1:5001/api/v1/payments/0xC563388e2e2fdD422166eD5E76971D11eD37A466/" + recipientAddress;
  console.log(requestString, amount);
  return fetch(requestString, Fetch.RequestInit.make(/* Post */2, {
                        "Content-Type": "application/json"
                      }, Caml_option.some(JSON.stringify(makePaymentRequest_encode({
                                    amount: amount,
                                    identifier: undefined
                                  }))), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(undefined)).then(function (prim) {
                return prim.json();
              }).then(function (json) {
              console.log("THE RESULT:", json);
              
            });
}

function startProcess(param) {
  makePayment("0x91c0c7b5D42e9B65C8071FbDeC7b1EC54D92AD92", "150000000000000000");
  var job = BsCron.CronJob.make({
        NAME: "CronString",
        VAL: "* * * * *"
      }, (function (param) {
          console.log("Printing every minute");
          makePayment("0x91c0c7b5D42e9B65C8071FbDeC7b1EC54D92AD92", "100000000000000000");
          
        }), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
  job.start();
  
}

exports.makePaymentRequest_encode = makePaymentRequest_encode;
exports.makePayment = makePayment;
exports.startProcess = startProcess;
/* BsCron Not a pure module */
